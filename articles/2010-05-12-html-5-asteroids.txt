---
title: HTML 5 Asteroids
author: Doug McInnes
date: 12/05/2010
category: coding/games/javascript-coding/projects
tags: asteroids, canvas, game, html5, javascript

<img class="pull-right" title="asteriods" src="/images/asteriods.png" alt="" width="171" height="134" />
<p style="text-align: left;">For some  months I've been playing around with HTML 5's Canvas element because I was curious about it, especially after <a href="http://wiki.github.com/tobeytailor/gordon/">seeing it run Flash</a>.  I hacked at it for a  while then realized I had produced an Asteroids game.</p> <h1 style="text-align: center;"><a title="Play It!" href="/html-5-asteroids/">Play It!</a></h1> <p style="text-align: left;"> </p><p style="text-align: left;">The source code is <a href="http://github.com/dmcinnes/HTML5-Asteroids">up on GitHub</a>!</p> <p style="text-align: left;">The <a href="https://developer.mozilla.org/en/Canvas_tutorial">Canvas</a> element is super cool.  Basically all of the sprites in the game are simple paths defined by an array of points.  These points are translated, rotated and scaled based on their state at any given point in the game using the standard Canvas transformations.  Plus it gives it a nice retro feel.</p><p style="text-align: left;">Let me know what you think!</p> <p style="text-align: left;">Here's some cool links to things that helped me out with the game:</p> <ul style="text-align: left;"> <li><a href="http://www.alienryderflex.com/polygon/">Determining Whether A Point Is Inside A Complex Polygon</a>.  Firefox does the wrong thing when it comes to isPointInPath(), the main Canvas method I used for collision detection; It doesn't apply the current transformations before determining if there's been a collision (and <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=405300">they won't fix it</a> for some reason).  I implemented this method to get around the problem but it works fast enough it could be used on all browsers.</li> <li><a href="http://www.metanetsoftware.com/">Metanet Software</a>, the makers of the awesome flash game <a href="http://www.thewayoftheninja.org/n.html">N</a>, have made a couple of extremely useful <a href="http://www.metanetsoftware.com/technique.html">tutorials on collision detection</a>.  These describe some of the techniques I used in the game, in particular the grid based broad-phase they describe in their second tutorial.</li> <li>I used <a href="http://typeface.neocracy.org/">typeface.js</a> 's <a href="http://typeface.neocracy.org/fonts.html">convert tool</a> to convert the awesome <a href="http://www.dafont.com/vector-battle.font">Vector Battle</a> font into some JSON point data that could be easily used in the canvas.  Typeface.js is a neat library for easily embedding arbitrary fonts in the page.  On supported browsers it creates small canvas elements and renders the font inside based on the CSS.  I borrowed bits from the library to get the font rendering.</li> </ul>
